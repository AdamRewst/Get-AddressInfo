Function Get-AddressInfo {
    <#
    .SYNOPSIS
    Gathers information related to a specified IP address
    .DESCRIPTION
    This script was created to display various aspects of poweshell scripting.
    Accepting a comma separated list or values from pipeline this function will 
    provide the following information for any public ip address that is specified:

    * The average latency of 10 pings
    * The number of hops to destination address
    * The ISP Information
    * The ASN Information
    * The geo-location data for the address
    * The local time based on geo-location data
    * The local weather based on geo-location data

    Output is available in text, json, or an array
    
    .PARAMETER ipAddress
    Specify a valid public IP address that is routable on the internet
    .PARAMETER json
    Will provide the output as a json formated object
    .PARAMETER array
    Will provide the output as a powershell array
    .PARAMETER ipAddress
    Specify a valid public IP address that is routable on the internet
    .PARAMETER Verbose
    Provides verbose logging of script steps
    .EXAMPLE
        PS C:\> Get-AddressInfo 8.8.8.8 -Array
    .EXAMPLE
        PS C:\> Get-AddressInfo 8.8.8.8,8.8.4.4 -Json
    .EXAMPLE
        PS C:\> $ipAddress | Get-AddressInfo
    .Notes
    Author : Lucas Coulson
    Created 2022/10/05
    #>  
    [CmdletBinding()]
    Param
    (
        [parameter(Mandatory = $true, Position = 0, ValueFromPipelineByPropertyName = $true)]
        [validatescript({ $_ -match [IPAddress]$_ })]
        [String[]]$ipAddress,
        [parameter(Mandatory = $false, Position = 1)]
        [Switch]$json = $false,
        [parameter(Mandatory = $false, Position = 2)]
        [Switch]$array = $false
    )
    Begin {
        $global:allAddressData = @()
    }
    Process {
        Foreach ($address in $ipAddress) {
            #region - prepare parameters
            Write-Verbose "Preparing Parameters..."
            #Check if $address is within the private range. This will determine if it is a public address.
            If ($address -Match '(^127\.)|(^192\.168\.)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)') {
                Write-Error "$address is not an internet routable address. Please Specify an IP address outside of the private range."
                Break
            }

            #Splatting for address info API
            $addressInfoParams = @{
                'URI'         = "http://ip-api.com/json/$address"
                'Body'        = @{
                    'fields' = 'offset,isp,org,as,lat,lon,regionName,city'
                }
                'ContentType' = 'application/json' 
                'Method'      = 'Get'
            }

            #Splatting for weather API
            $weatherParams = @{
                'URI'         = "https://wttr.in/$address"
                'Body'        = @{
                    'format' = '"%C,%t,%w"'
                }
                'ContentType' = 'application/json' 
                'Method'      = 'Get'
            }
            #endRegion - Prepare Parameters
        }
    }
    End {        
    }
}
